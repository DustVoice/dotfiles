# > General
## Disable banner
$env.config.show_banner = false

## Set nvim editor
$env.config.buffer_editor = "nvim"
$env.EDITOR = "nvim"

## Set vi mode + cursor shapes
$env.config.edit_mode = "vi" # emacs, vi
$env.config.cursor_shape = {
    emacs: line # block, underscore, line, blink_block, blink_underscore, blink_line (line is the default)
    vi_insert: line # block, underscore, line , blink_block, blink_underscore, blink_line (block is the default)
    vi_normal: block # block, underscore, line, blink_block, blink_underscore, blink_line (underscore is the default)
}

## Fix bug with Wezterm
$env.config.shell_integration.osc133 = ("WEZTERM_PANE" not-in $env)

## Set theme to Catppuccin Macchiato
use nu_scripts/themes/nu-themes/catppuccin-macchiato.nu
$env.config.color_config = (catppuccin-macchiato)

## Conda
$env.CONDA_NO_PROMPT = true
# < General

# > Completers
{{- if lookPath "fish" }}
# Setup fish for completion
let fish_completer = {|spans|
    fish --command $'complete "--do-complete=($spans | str join " ")"'
    | from tsv --flexible --noheaders --no-infer
    | rename value description
}
{{- end }}

{{- if lookPath "carapace" }}
# Setup carapace for completion
let carapace_completer = {|spans: list<string>|
    carapace $spans.0 nushell ...$spans
    | from json
    | if ($in | default [] | where value =~ '^-.*ERR$' | is-empty) { $in } else { null }
}
{{- end }}

{{- if lookPath "zoxide" }}
let zoxide_completer = {|spans|
    $spans | skip 1 | zoxide query -l ...$in | lines | where {|x| $x != $env.PWD}
}
{{- end }}

{{- if lookPath "carapace" }}
# Combine available completers into a multi-completer
let external_completer = {|spans|
    let expanded_alias = scope aliases
    | where name == $spans.0
    | get -i 0.expansion

    let spans = if $expanded_alias != null {
        $spans
        | skip 1
        | prepend ($expanded_alias | split row ' ' | take 1)
    } else {
        $spans
    }

    match $spans.0 {
        {{- if lookPath "fish" }}
        # carapace completions are incorrect for nu
        nu => $fish_completer
        # fish completes commits and branch names in a nicer way
        git => $fish_completer
        # carapace doesn't have completions for asdf
        asdf => $fish_completer
        {{- end }}
        {{- if lookPath "zoxide" }}
        # use zoxide completions for zoxide commands
        __zoxide_z | __zoxide_zi => $zoxide_completer
        {{- end }}
        _ => $carapace_completer
    } | do $in $spans
}

$env.config.completions.external = {
    enable: true # set to false to prevent nushell looking into $env.PATH to find more suggestions, `false` recommended for WSL users as this look up may be very slow
    max_results: 100 # setting it lower can improve completion performance at the cost of omitting some options
    completer: $external_completer
}
{{- end }}
# < Completers

# > Integrations
## Pueue
use nu_scripts/modules/background_task/task.nu

## Conda
use nu_scripts/modules/virtual_environments/conda.nu

## Tools
mkdir ($nu.data-dir | path join "vendor/autoload")
{{- if lookPath "starship" }}
starship init nu | save -f ($nu.data-dir | path join "vendor/autoload/starship.nu")
{{- end }}
{{- if lookPath "zoxide" }}
zoxide init nushell --cmd z | save -f ($nu.data-dir | path join "vendor/autoload/zoxide.nu")
{{- end }}
{{- if lookPath "jj" }}
jj util completion nushell | save -f ($nu.data-dir | path join "vendor/autoload/jj.nu")
{{- end }}
# < Integrations

# > Aliases
alias cz = chezmoi
      
alias es = eza --git --icons=auto
alias el = eza -lh --git --icons=auto
alias et = eza -lTh --git --icons=auto
alias esa = eza -a --git --icons=auto
alias ela = eza -lah --git --icons=auto
alias eta = eza -lTah --git --icons=auto

alias ljj = lazyjj
# < Aliases

source ($nu.default-config-dir | path join "user.nu")
